<project name="FaultTracer-general">

	<property name="project.prefix" value="${prefix}" />
	<property name="project.test.suite" value="${testsuite}" />
		<property name="faulttracer.fake.testsuite" value="tracer.coverage.junit.JUnit4FaultTracerTestSuite" />
	<property name="faulttracer" value="${fifl}" />
	<property name="faulttracer.location" value="${faulttracer}" />
	<property name="faulttracer.dist.dir" value="${faulttracer}" />
	<property name="project.mutation.path" value="${mutationpath}" />
	<property name="project.new.version" value="${newversion}" />
	<property name="faulttracer.junit.level" value="${junit4}" />

	<property name="faulttracer.javaagent" value="${faulttracer.dist.dir}/agent.jar" />
	<property name="faulttracer.jars.dir" value="${faulttracer.dist.dir}/lib/" />
	<property name="faulttracer.output.dir" value="${basedir}/faulttracer-files" />

	<property name="faulttracer.maxmemory" value="${maxmemory}" />

	<path id="faulttracer.classpath">
		<pathelement path="${faulttracer.dist.dir}/bin" />
		<fileset dir="${faulttracer.jars.dir}" includes="*.jar">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="faulttracerDir">
		<mkdir dir="${faulttracer.output.dir}" />
	</target>

	<target name="test-faulttracer" depends="setProperties">
		<mkdir dir="faulttracer-files/junit-reports">
		</mkdir>
		<junit dir="." printSummary="true" fork="true" forkmode="once" showoutput="true">
			<classpath>
				<path refid="faulttracer.classpath" />
				<pathelement path="${cp}">
				</pathelement>
			</classpath>
			<jvmarg line="${faulttracer.arg.line} ${faulttracer.properties.add}" />

			<formatter type="xml" />
			<formatter usefile="true" type="plain" />
			<test todir="faulttracer-files/junit-reports" name="${faulttracer.fake.testsuite}" />
		</junit>
	</target>

	<target name="setProperties">
		<condition property="classes.add" value="-Dfaulttracer.test.classes=${test.classes}" else="">
			<isset property="test.classes" />
		</condition>
		<condition property="methods.add" value="-Dfaulttracer.test.methods=${test.methods}" else="">
			<isset property="test.methods" />
		</condition>
		<property name="faulttracer.properties.add" value="${classes.add} ${methods.add}" />
	</target>



	<target name="collectECGCoverage" description="* create ECG coverage data for the program version under test" depends="faulttracerDir">
		<property name="create.coverage.javaagent" value="-javaagent:${faulttracer.javaagent}" />
		<property name="create.coverage.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="create.coverage.package.prefix" value="-Dfaulttracer.package.prefix=${project.prefix}" />
		<property name="create.coverage.project.test.suite" value="-Dfaulttracer.test.suite=${project.test.suite}" />
		<property name="create.coverage.trace" value="-Dfaulttracer.trace=true" />
		<property name="create.coverage.junit" value="-Dfaulttracer.junit.level=${junit4}" />
		<antcall target="test-faulttracer">
			<param name="faulttracer.arg.line" value=" ${create.coverage.javaagent} ${create.coverage.memory} ${create.coverage.package.prefix} ${create.coverage.project.test.suite} ${create.coverage.trace} ${create.coverage.junit}" />
		</antcall>
	</target>

	<target name="collectMethodCoverage" description="* create method coverage data for the program version under test" depends="faulttracerDir">
		<property name="create.coverage.javaagent" value="-javaagent:${faulttracer.javaagent}" />
		<property name="create.coverage.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="create.coverage.package.prefix" value="-Dfaulttracer.package.prefix=${project.prefix}" />
		<property name="create.coverage.project.test.suite" value="-Dfaulttracer.test.suite=${project.test.suite}" />
		<property name="create.coverage.trace" value="-Dfaulttracer.trace=true" />
		<property name="create.coverage.type" value="-Dfaulttracer.method.coverage=true" />
		<property name="create.coverage.junit" value="-Dfaulttracer.junit.level=${junit4}" />
		<antcall target="test-faulttracer">
			<param name="faulttracer.arg.line" value=" ${create.coverage.javaagent} ${create.coverage.memory} ${create.coverage.package.prefix} ${create.coverage.project.test.suite} ${create.coverage.trace} ${create.coverage.type} ${create.coverage.junit}" />
		</antcall>
	</target>

	<target name="collectStatementCoverage" description="* create statement coverage data for the program version under test" depends="faulttracerDir">
		<property name="create.coverage.javaagent" value="-javaagent:${faulttracer.javaagent}" />
		<property name="create.coverage.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="create.coverage.package.prefix" value="-Dfaulttracer.package.prefix=${project.prefix}" />
		<property name="create.coverage.project.test.suite" value="-Dfaulttracer.test.suite=${project.test.suite}" />
		<property name="create.coverage.trace" value="-Dfaulttracer.trace=true" />
		<property name="create.coverage.type" value="-Dfaulttracer.statement.coverage=true" />
		<property name="create.coverage.junit" value="-Dfaulttracer.junit.level=${junit4}" />
		<antcall target="test-faulttracer">
			<param name="faulttracer.arg.line" value=" ${create.coverage.javaagent} ${create.coverage.memory} ${create.coverage.package.prefix} ${create.coverage.project.test.suite} ${create.coverage.trace} ${create.coverage.type} ${create.coverage.junit}" />
		</antcall>
	</target>
	
	<target name="collectBranchCoverage" description="* create branch coverage data for the program version under test" depends="faulttracerDir">
		<property name="create.coverage.javaagent" value="-javaagent:${faulttracer.javaagent}" />
		<property name="create.coverage.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="create.coverage.package.prefix" value="-Dfaulttracer.package.prefix=${project.prefix}" />
		<property name="create.coverage.project.test.suite" value="-Dfaulttracer.test.suite=${project.test.suite}" />
		<property name="create.coverage.trace" value="-Dfaulttracer.trace=true" />
		<property name="create.coverage.type" value="-Dfaulttracer.branch.coverage=true" />
		<property name="create.coverage.junit" value="-Dfaulttracer.junit.level=${junit4}" />
		<antcall target="test-faulttracer">
			<param name="faulttracer.arg.line" value=" ${create.coverage.javaagent} ${create.coverage.memory} ${create.coverage.package.prefix} ${create.coverage.project.test.suite} ${create.coverage.trace} ${create.coverage.type} ${create.coverage.junit}" />
		</antcall>
	</target>

	
	<target name="normalExecute" description="* Create ECG coverage data for program under test" depends="faulttracerDir">
		<property name="create.coverage.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="create.coverage.package.prefix" value="-Dfaulttracer.package.prefix=${project.prefix}" />
		<property name="create.coverage.project.test.suite" value="-Dfaulttracer.test.suite=${project.test.suite}" />
		<property name="create.coverage.junit" value="-Dfaulttracer.junit.level=${junit4}" />
		<antcall target="test-faulttracer">
			<param name="faulttracer.arg.line" value="  ${create.coverage.memory} ${create.coverage.package.prefix} ${create.coverage.project.test.suite} ${create.coverage.junit}" />
		</antcall>
	</target>
	
	<target name="selectAffectedTests" description="* select affected tests for regression testing">
		<property name="select.tests.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="select.tests.new.version" value="-Dfaulttracer.new.version=${project.new.version}" />
		<java classname="tracer.test.selection.core.TestSelection" fork="true">
			<classpath>
				<path refid="faulttracer.classpath" />
				<pathelement path="${cp}">
				</pathelement>
			</classpath>
			<jvmarg line="${select.tests.memory} ${select.tests.new.version}" />
		</java>
	</target>

	<target name="selectAndPrioritizeAffectedTests" description="* select and prioritize affected tests for regression testing">
		<property name="select.tests.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="select.tests.new.version" value="-Dfaulttracer.new.version=${project.new.version}" />
		<java classname="tracer.test.prioritization.core.TestPrioritization" fork="true">
			<classpath>
				<path refid="faulttracer.classpath" />
				<pathelement path="${cp}">
				</pathelement>
			</classpath>
			<jvmarg line="${select.tests.memory} ${select.tests.new.version}" />
		</java>
	</target>

	<target name="runAffectedTests" description="* only rerun affected tests for the new program version" depends="faulttracerDir">
		<property name="run.affected.javaagent" value="-javaagent:${faulttracer.javaagent}" />
		<property name="run.affected.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="run.affected.package.prefix" value="-Dfaulttracer.package.prefix=${project.prefix}" />
		<property name="run.affected.project.test.suite" value="-Dfaulttracer.test.suite=${project.test.suite}" />
		<property name="run.affected.trace" value="-Dfaulttracer.trace=true" />
		<property name="run.affected.select" value="-Dfaulttracer.select=true" />
		<antcall target="test-faulttracer">
			<param name="faulttracer.arg.line" value="  ${run.affected.javaagent} ${run.affected.memory} ${run.affected.package.prefix} ${run.affected.project.test.suite} ${run.affected.trace} ${run.affected.select}" />
		</antcall>
	</target>

	<target name="runPrioritizedAffectedTests" description="* only rerun prioritized affected tests for the new program version" depends="faulttracerDir">
		<property name="run.affected.javaagent" value="-javaagent:${faulttracer.javaagent}" />
		<property name="run.affected.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="run.affected.package.prefix" value="-Dfaulttracer.package.prefix=${project.prefix}" />
		<property name="run.affected.project.test.suite" value="-Dfaulttracer.test.suite=${project.test.suite}" />
		<property name="run.affected.trace" value="-Dfaulttracer.trace=true" />
		<property name="run.affected.prioritize" value="-Dfaulttracer.prioritize=true" />
		<antcall target="test-faulttracer">
			<param name="faulttracer.arg.line" value="  ${run.affected.javaagent} ${run.affected.memory} ${run.affected.package.prefix} ${run.affected.project.test.suite} ${run.affected.trace} ${run.affected.prioritize}" />
		</antcall>
	</target>

	<target name="runReducedTests" description="* only run reduced tests" depends="faulttracerDir">
		<property name="run.reduced.javaagent" value="-javaagent:${faulttracer.javaagent}" />
		<property name="run.reduced.memory" value="-Xmx${faulttracer.maxmemory}" />
		<property name="run.reduced.package.prefix" value="-Dfaulttracer.package.prefix=${project.prefix}" />
		<property name="run.reduced.project.test.suite" value="-Dfaulttracer.test.suite=${project.test.suite}" />
		<property name="run.reduced.trace" value="-Dfaulttracer.trace=true" />
		<property name="run.reduced.reduce" value="-Dfaulttracer.reduce=true" />
		<antcall target="test-faulttracer">
			<param name="faulttracer.arg.line" value="  ${run.reduced.javaagent} ${run.reduced.memory} ${run.reduced.package.prefix} ${run.reduced.project.test.suite} ${run.reduced.trace} ${run.reduced.reduce}" />
		</antcall>
	</target>

	<target name="determineAffectingChanges" description="* determining affecting changes for the new program version">
		<property name="determine.affect.change.memory" value="-Xmx${faulttracer.maxmemory}" />
		<java classname="tracer.faultlocalization.core.AffectingChangeDetermination" fork="true">
			<classpath>
				<path refid="faulttracer.classpath" />
				<pathelement path="${cp}">
				</pathelement>
			</classpath>
			<jvmarg line="${determine.affect.change.memory}" />
		</java>
	</target>

	<target name="rankAffectingChanges" description="* rank suspicious edits that have cause the new version to fail">
		<property name="rank.affect.change.memory" value="-Xmx${faulttracer.maxmemory}" />
		<java classname="tracer.faultlocalization.core.FaultLocalization" fork="true">
			<classpath>
				<path refid="faulttracer.classpath" />
				<pathelement path="${cp}">
				</pathelement>
			</classpath>
			<jvmarg line="${rank.affect.change.memory}" />
		</java>
	</target>

	<target name="testParameters">
		<echo>
			project.prefix     : ${project.prefix} 
			project.test.suite : ${project.test.suite} 
			cp                 : ${cp} 
			faulttracer.location: ${faulttracer.location}
			faulttracer.classpath:  ${faulttracer.classpath}
			faulttracer.dist.dir: ${faulttracer.dist.dir}
			faulttracer.maxmemory: ${faulttracer.maxmemory}
			faulttracer.method.coverage: ${faulttracer.method.coverage} 
			faulttracer.statement.coverage: ${faulttracer.statement.coverage}
				faulttracer.old.version: ${project.old.version}
				faulttracer.new.version: ${project.new.version}
		</echo>
	</target>



	<target name="loadECGCoverage" description="">
			<java classname="tracer.coverage.io.ECGTraceLoader" maxmemory="${faulttracer.maxmemory}" fork="true">
				<classpath>
					<path refid="faulttracer.classpath" />
					<pathelement path="${cp}">
					</pathelement>
				</classpath>
			</java>
		</target>
	
	<target name="loadStatementCoverage" description="">
			<java classname="tracer.coverage.io.StatementTraceLoader" maxmemory="${faulttracer.maxmemory}" fork="true">
				<classpath>
					<path refid="faulttracer.classpath" />
					<pathelement path="${cp}">
					</pathelement>
				</classpath>
			</java>
		</target>
	<target name="loadMethodCoverage" description="">
			<java classname="tracer.coverage.io.MethodTraceLoader" maxmemory="${faulttracer.maxmemory}" fork="true">
				<classpath>
					<path refid="faulttracer.classpath" />
					<pathelement path="${cp}">
					</pathelement>
				</classpath>
			</java>
		</target>
	<target name="loadBranchCoverage" description="">
			<java classname="tracer.coverage.io.BranchTraceLoader" maxmemory="${faulttracer.maxmemory}" fork="true">
				<classpath>
					<path refid="faulttracer.classpath" />
					<pathelement path="${cp}">
					</pathelement>
				</classpath>
			</java>
		</target>
</project>
